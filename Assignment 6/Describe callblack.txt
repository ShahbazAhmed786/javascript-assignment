CALLBACK:
Callbacks are used in JavaScript and TypeScript to handle asynchronous operations, allowing functions to execute after other functions have completed their tasks. The advantages of callbacks include simplicity and flexibility, as they allow for non-blocking code execution and can handle asynchronous tasks like reading files or making network requests. However, callbacks can lead to callback hell or pyramid of doom, making code harder to read and maintain as the number of nested callbacks increases. Promises were introduced to address this issue by providing a cleaner and more structured way to handle asynchronous operations. Promises offer better error handling, chaining of multiple asynchronous operations, and improved code readability. Moving from callbacks to promises is advantageous because it enhances code organization and makes it easier to manage complex asynchronous flows.